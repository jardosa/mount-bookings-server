# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Post implements Node {
  _id: ID!
  isPublished: Boolean!
  authorId: ID!
}

interface Node {
  _id: ID!
}

type Author {
  _id: ID!
  firstName: String
  lastName: String
  posts: [Post]!
}

type User implements Node {
  _id: ID!
  firstName: String!
  lastName: String!
  email: String!
}

type Auth {
  access_token: String!
}

type MemberEntity implements Node {
  firstName: String!
  lastName: String!
  phoneNumber: String!
  email: String!
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmailAddress: String
  birthday: DateTime
  _id: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MemberConnection implements NodeConnection {
  totalCount: Int!
  nodes: [MemberEntity!]!
}

interface NodeConnection {
  totalCount: Int!
}

type ReservationEntity implements Node {
  leader: MemberEntity!
  members: [MemberEntity!]!
  reservationStatus: Status!
  hikeDateStart: DateTime!
  hikeDateEnd: DateTime!
  _id: ID!
}

enum Status {
  Pending
  Approved
  Declined
  Cancelled
}

type ReservationConnection implements NodeConnection {
  totalCount: Int!
  nodes: [ReservationEntity!]!
}

type Query {
  author(id: Int!): Author!
  posts: [Post!]!
  post(id: Int!): Post!
  ping: String!
  users: [User!]!
  userById(id: String!): User!
  whoAmI: User!
  members: MemberConnection!
  member(id: String!): MemberEntity!
  reservations: ReservationConnection!
  reservation(id: ID!): ReservationEntity!
}

type Mutation {
  createAuthor(createAuthorInput: CreateAuthorInput!): Author!
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): Author!
  removeAuthor(id: Int!): Author!
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  removePost(id: Int!): Post!
  echo(message: String!): String!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  login(loginInput: LoginInput!): Auth!
  createMember(createMemberInput: CreateMemberInput!): MemberEntity!
  updateMember(updateMemberInput: UpdateMemberInput!): MemberEntity!
  removeMember(id: String!): MemberEntity!
  createReservation(createReservationInput: CreateReservationInput!): ReservationEntity!
  updateReservation(updateReservationInput: UpdateReservationInput!): ReservationEntity!
  removeReservation(id: ID!): ReservationEntity!
}

input CreateAuthorInput {
  firstName: String
  lastName: String = ""
}

input UpdateAuthorInput {
  firstName: String
  lastName: String = ""
  id: Int!
}

input CreatePostInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePostInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  password: String
  id: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateMemberInput {
  firstName: String!
  lastName: String!
  phoneNumber: String!
  email: String!
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmailAddress: String
  birthday: DateTime
}

input UpdateMemberInput {
  firstName: String!
  lastName: String!
  phoneNumber: String!
  email: String!
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmailAddress: String
  birthday: DateTime
  _id: ID!
}

input CreateReservationInput {
  leader: CreateMemberInput!
  members: [CreateMemberInput!]!
  reservationStatus: Status!
  hikeDateStart: DateTime!
  hikeDateEnd: DateTime!
}

input UpdateReservationInput {
  _id: ID!
}
